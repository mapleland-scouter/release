name: Update Per-Version Download Counts

on:
  schedule:
    - cron: "*/5 * * * *"  # 매 5분마다 실행
  workflow_dispatch:

permissions:
  contents: write  # ✅ git push 가능하게 함

jobs:
  update-download-badges-and-readme:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Generate badge JSONs and README table
        run: |
          mkdir -p .github/badges
          touch .github/badges/.commit_if_changed

          releases=$(curl -s https://api.github.com/repos/mapleland-scouter/release/releases)
          badge_table="| 버전 | 다운로드 수 | 릴리즈 링크 |\n|------|--------------|---------------|"

          echo "$releases" | jq -c '.[]' | while read release; do
            TAG=$(echo "$release" | jq -r '.tag_name')
            COUNT=$(echo "$release" | jq '[.assets[] | select(.name | endswith(".exe")) | .download_count] | add')

            FILE=".github/badges/${TAG}-downloads.json"
            NEW_JSON=$(printf '{"schemaVersion":1,"label":"%s downloads","message":"%s","color":"blue"}' "$TAG" "$COUNT")

            if [ ! -f "$FILE" ] || [ "$NEW_JSON" != "$(cat $FILE 2>/dev/null)" ]; then
              echo "$NEW_JSON" > "$FILE"
              touch .github/badges/.commit_if_changed
            fi

            badge_url="https://img.shields.io/endpoint?url=https://raw.githubusercontent.com/mapleland-scouter/release/main/.github/badges/${TAG}-downloads.json"
            release_url="https://github.com/mapleland-scouter/release/releases/tag/${TAG}"
            badge_table="${badge_table}\n| \`${TAG}\` | ![${TAG}](${badge_url}) | [🔗 바로가기](${release_url}) |"
          done

          # badge_table을 중간 파일로 저장
          echo -e "$badge_table" > .github/badges/badge_table.md

          # ✅ awk를 사용해 마커 안만 교체
          awk '
            BEGIN { in_table=0 }
            /<!-- DOWNLOAD-TABLE-START -->/ {
              print;
              while ((getline line < ".github/badges/badge_table.md") > 0) print line;
              in_table=1;
              next
            }
            /<!-- DOWNLOAD-TABLE-END -->/ { in_table=0 }
            !in_table
          ' README.md > README.new.md && mv README.new.md README.md

      - name: Commit badge and README if changed
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"

          if [ -f ".github/badges/.commit_if_changed" ]; then
            git add README.md .github/badges/*.json
            git commit -m "Auto update badge and README"
            git push
          else
            echo "No changes to commit."
          fi
