name: Update Per-Version Download Counts

on:
  schedule:
    - cron: "*/5 * * * *"  # 5분마다 실행
  workflow_dispatch:        # 수동 실행도 허용

permissions:
  contents: write

jobs:
  update-download-badges-and-readme:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Generate badge JSONs and README table
        run: |
          mkdir -p .github/badges
          touch .github/badges/.commit_if_changed

          releases=$(curl -s https://api.github.com/repos/mapleland-scouter/release/releases)
          total=0

          # 버전별 다운로드 수 수집 + 정렬
          echo "$releases" | jq '[.[] | { tag: .tag_name, count: ([.assets[] | select(.name | endswith(".exe")) | .download_count] | add) }] | sort_by(.tag | sub("^v"; "") | split(".") | map(tonumber)) | reverse' > versions.json

          badge_table="| 버전 | 다운로드 수 | 릴리즈 링크 |\n|------|--------------|---------------|"

          latest_tag=$(jq -r '.[0].tag' versions.json)

          jq -c '.[]' versions.json | while read version; do
            TAG=$(echo "$version" | jq -r '.tag')
            COUNT=$(echo "$version" | jq -r '.count')
            total=$((total + COUNT))

            FILE=".github/badges/${TAG}-downloads.json"
            OLD_COUNT=$(jq -r '.message' "$FILE" 2>/dev/null || echo "none")

            if [ "$COUNT" != "$OLD_COUNT" ]; then
              NEW_JSON=$(printf '{"schemaVersion":1,"label":"%s downloads","message":"%s","color":"blue"}' "$TAG" "$COUNT")
              echo "$NEW_JSON" > "$FILE"
              touch .github/badges/.commit_if_changed
            fi

            badge_url="https://img.shields.io/endpoint?url=https://raw.githubusercontent.com/mapleland-scouter/release/main/.github/badges/${TAG}-downloads.json"
            release_url="https://github.com/mapleland-scouter/release/releases/tag/${TAG}"

            if [ "$TAG" = "$latest_tag" ]; then
              badge_table="${badge_table}\n| **\`${TAG}\`** | ![${TAG}](${badge_url}) | [🔗 바로가기](${release_url}) |"
            else
              badge_table="${badge_table}\n| \`${TAG}\` | ![${TAG}](${badge_url}) | [🔗 바로가기](${release_url}) |"
            fi
          done

          # 누적 다운로드 수 포함
          header="> 📦 총 다운로드 수: **${total}회**\n"
          echo -e "${header}\n${badge_table}" > .github/badges/badge_table.md

          # README 갱신
          awk '
            BEGIN { in_table=0 }
            /<!-- DOWNLOAD-TABLE-START -->/ {
              print;
              while ((getline line < ".github/badges/badge_table.md") > 0) print line;
              in_table=1;
              next
            }
            /<!-- DOWNLOAD-TABLE-END -->/ { in_table=0 }
            !in_table
          ' README.md > README.new.md && mv README.new.md README.md

      - name: Commit badge and README if changed
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"

          if [ -f ".github/badges/.commit_if_changed" ]; then
            git add README.md .github/badges/*.json
            if git diff --cached --quiet; then
              echo "✅ 변경 없음: 커밋 생략"
            else
              git commit -m "Auto update badge and README with totals"
              git push
            fi
          else
            echo "✅ 변화 없음: 스킵"
          fi

      - name: Clean up temporary files
        run: |
          rm -f .github/badges/.commit_if_changed .github/badges/badge_table.md versions.json
